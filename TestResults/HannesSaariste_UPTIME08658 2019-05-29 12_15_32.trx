<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="a636915a-2bf2-4038-ba7e-1437f617e84a" name="HannesSaariste@UPTIME08658 2019-05-29 12:15:32" runUser="AzureAD\HannesSaariste" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="82f58698-f45c-4a91-a385-93496e26ddf6">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment runDeploymentRoot="HannesSaariste_UPTIME08658 2019-05-29 12_15_32">
      <DeploymentItem filename="C:\Users\HannesSaariste\source\repos\AP_Article_Web_Test\packages\Newtonsoft.Json.12.0.2\lib\net45\Newtonsoft.Json.dll" />
    </Deployment>
    <Execution hostProcessPlatform="MSIL">
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Properties>
      <Property name="TestSettingsUIType" value="UnitTest" />
    </Properties>
  </TestSettings>
  <Times creation="2019-05-29T12:15:32.3812935+03:00" queuing="2019-05-29T12:15:32.7416952+03:00" start="2019-05-29T12:15:32.8434232+03:00" finish="2019-05-29T12:16:07.1621063+03:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" executed="1" passed="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="AripaevTeemaveebideTest_ArtikliteVanuseWebtest" storage="c:\users\hannessaariste\source\repos\ap_article_web_test\ap_article_web_test\aripaevteemaveebidetest_artiklitevanusewebtest.webtest" id="ee2bb94f-72ae-415e-8171-5346b4d91de9" persistedWebTest="">
      <Execution id="2fbd3b08-ee18-47a2-bd21-0e9f14bafa84" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="ee2bb94f-72ae-415e-8171-5346b4d91de9" executionId="2fbd3b08-ee18-47a2-bd21-0e9f14bafa84" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="2fbd3b08-ee18-47a2-bd21-0e9f14bafa84" testId="ee2bb94f-72ae-415e-8171-5346b4d91de9" testName="AripaevTeemaveebideTest_ArtikliteVanuseWebtest" computerName="UPTIME08658" duration="00:00:23.5304148" startTime="2019-05-29T12:15:32.9332123+03:00" endTime="2019-05-29T12:16:07.0922598+03:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2fbd3b08-ee18-47a2-bd21-0e9f14bafa84">
      <ResultFiles>
        <ResultFile path="AripaevTeemaveebideTest_ArtikliteVanuseWebtest.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="82f58698-f45c-4a91-a385-93496e26ddf6">
        <Description>These are default test settings for a local test run.</Description>
        <Deployment runDeploymentRoot="HannesSaariste_UPTIME08658 2019-05-29 12_15_32">
          <DeploymentItem filename="C:\Users\HannesSaariste\source\repos\AP_Article_Web_Test\packages\Newtonsoft.Json.12.0.2\lib\net45\Newtonsoft.Json.dll" />
        </Deployment>
        <Execution hostProcessPlatform="MSIL">
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Properties>
          <Property name="TestSettingsUIType" value="UnitTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>HannesSaariste_UPTIME08658 2019-05-29 12_15_32\In\2fbd3b08-ee18-47a2-bd21-0e9f14bafa84\AripaevTeemaveebideTest_ArtikliteVanuseWebtest.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>